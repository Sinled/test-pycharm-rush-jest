{
    "$schema": "https://json.schemastore.org/tsconfig",
    // see https://www.typescriptlang.org/tsconfig to better understand tsconfigs
    "compilerOptions": {
        // Use while we don't have types for all packages
        "allowJs": false,
        // ensure all code is alive
        "allowUnreachableCode": false,
        "module": "esnext",
        "lib": ["dom", "esnext"],
        "target": "es2019",
        "importHelpers": true,
        // output .d.ts declaration files for consumers
        "declaration": true,
        // improves go to definition
        "declarationMap": true,
        // output .js.map sourcemap files for consumers
        "sourceMap": true,
        // stricter type-checking for stronger correctness. Recommended by TS
        "strict": true,
        // linter checks for common issues
        "noImplicitReturns": true,
        "noFallthroughCasesInSwitch": true,
        // noUnused* overlap with @typescript-eslint/no-unused-vars, can disable if duplicative
        // there are a problem with false positives for next rules
        "noUnusedLocals": false,
        "noUnusedParameters": false,
        // use Node's module resolution algorithm, instead of the legacy TS one
        "moduleResolution": "node",
        // transpile JSX to React.createElement
        "jsx": "react",
        // interop between ESM and CJS modules. Recommended by TS
        "esModuleInterop": true,
        // significant perf increase by skipping checking .d.ts files, particularly those in node_modules. Recommended by TS
        "skipLibCheck": true,
        // error out if import and file system have a casing mismatch. Recommended by TS
        "forceConsistentCasingInFileNames": true,
        "noEmit": false
    }
}
